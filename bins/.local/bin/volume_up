#!/bin/bash

msgId="591049"
DEVICES=`pacmd list-sinks | grep "index" |grep -Eo '[0-9]{1,4}'`


function up(){
    DEVICE=`echo $DEVICES |tr " " "\n" |  tail -n$1| head -n1`
    CUR_VOL=`pacmd list-sinks | awk '/volume: front/ { print $5 }' | tail -n$1 |  head -n1| grep -Eo "[0-9]*"`
    NEW_VOL=$(($CUR_VOL+5))

    if [[ $NEW_VOL -gt 100 ]] # don't allow more than 100% volume
    then
      pactl set-sink-volume "$DEVICE" 100%
      CUR_VOL=100
      return 0
    else
      pactl set-sink-volume "$DEVICE" +5%
      CUR_VOL=$(($CUR_VOL+5))
    fi
}

function down(){
    DEVICE=`echo $DEVICES | tr " " "\n" | tail -n$1| head -n1`

    CUR_VOL=`pacmd list-sinks | awk '/volume: front/ { print $5 }' | tail -n$1 | head -n1 | grep -Eo "[0-9]*"`
    NEW_VOL=$(($CUR_VOL+5))

    pactl set-sink-volume "$DEVICE" -5%
    CUR_VOL=$(($CUR_VOL-5))
}

function notify(){
  DEVICE=`echo $DEVICES | tr " " "\n" | tail -n$1| head -n1`
  # msg=`getProgressString 20 "" ""  $CUR_VOL`
  dunstify -h "string:synchronous:volume" -h "int:value:$CUR_VOL" -u low -a "Volume $DEVICE" -t 100 -r "$msgId" "Volume " "$CUR_VOL%"
}

case $1 in
  up)         up 1 && notify;;
  altup)         up 2 && notify;;
  down)       down 1 && notify;;
  altdown)       down 2 && notify;;
  mute)       mute $2;;
esac

