function dark () {
    # function to toggle light/dark mode on alacrity
    if [[ -n $1 ]]; then
        #light mode
        wal --theme solarized -nle
        sed -i "s/-dark/-light/g" "$XDG_CONFIG_HOME/foot/foot.ini"
    else
        #dark mode
        wal --theme solarized -ne
        sed -i "s/-light/-dark/g" "$XDG_CONFIG_HOME/foot/foot.ini"
    fi
}

alias format="sudo mkfs.ntfs -f -L 'Toshiba'"
alias chromium="chromium --enable-features=UseOzonePlatform --ozone-platform=wayland"
alias viber="export QT_QPA_PLATFORM=xcb; viber 2> /dev/null & disown"
alias feh="imv"
alias dwl="/home/bibek/git/dwl/dwl"
alias wm="cd /home/bibek/.local/Wolfram/Mathematica/11.3/Executables/ ; ./Mathematica"
alias watchlist="condainit;feh /home/bibek/git/nepse/intraday.png & /home/bibek/git/nepse/watch.py"
alias checkipo="condainit; /home/bibek/git/nepse/checkipo.py"
alias statmech="mpv 'https://www.youtube.com/playlist?list=PLXLSbKIMm0kjxyp45FIY62XNgHk4ywSaH' & disown"
alias statmech2="mpv 'https://www.youtube.com/playlist?list=PLCC901B3A9445042D' & disown"
alias relativity="mpv 'https://www.youtube.com/playlist?list=PLD9DDFBDC338226CA'"
alias cloudy="/home/bibek/git/cloudy/c17.02/source/cloudy.exe -p"

# copy pipe to clipboard.
if [[ $XDG_SESSION_TYPE == "wayland" ]]; then
    alias p="wl-paste"
    alias c="wl-copy"
    alias cimg="wl-copy"
else
    alias p="xclip -selection c -o"
    alias c="xclip -selection c"
    alias cimg="xclip -selection c -t image/png"
fi


## SSH Reverse tunnel
# function kutunnel() {
#     echo ssh -N -L 8888:"$1":8888 bibekg@hpc.ku.edu.np
#     ssh -N -L 8888:"$1":8888 bibekg@hpc.ku.edu.np
# }
#
#

function makepng(){
    convert "$1" -fuzz 50% -transparent white -fill '#FF4500' -opaque black /tmp/makepng.png
    # convert "$1" -fuzz 20% -transparent 'color 0 0' -fill '#FF4500' -opaque black /tmp/makepng.png
    cat /tmp/makepng.png | cimg
}

function typeout(){
    if [ -z $1 ] 
    then
        set 1=$(p)
    fi
    sleep 2;
    xdotool key -clearmodifiers $(echo $1 | sed -e 's/\(.\)/\1 /g')
}


function confirm() {
    # call with a prompt string or use a default
    read -q "response?${1:-proceed? [y/N]} "
    case "$response" in
        [yY][eE][sS]|[yY])
            true
            ;;
        *)
            false
            ;;
    esac
}

function reboot() {
    # Just a function to remind myself not to do reboot
    echo "HDD probably won't be mounted in next boot."
    confirm && reboot
}

alias ssh='ssh -o ServerAliveInterval=60'
alias hdd='cd /mnt/hdd/home/bibek/'

# systemctl commands
alias start="sudo systemctl start "
alias stop="sudo systemctl stop "
alias restart="sudo systemctl restart "

alias vm='vim ~/dox/project/main.tex'
alias vls='vim ~/.config/nvim/mySnips/tex.snippets'
alias dir='vim ~/.config/directories'
alias pq='pacman -Q'
alias py='python'
alias void='cd ~/git/voidrice/.local/bin/'

# # Wifi alias
# alias wifi_scan="iwctl station wlan0 scan; iwctl station wlan0 get-networks"
# alias wifi_connect="iwctl station wlan0 connect "

# default installs
alias grep="grep --color=auto"
alias rm="rm -v"
alias rmrf="rm -rf"
alias ls="ls -h --color"    # add colors for filetype recognition
alias lstr="ls -tr"
alias lsa="ls -a"
alias ll="ls -l --group-directories-first"
alias la="ls -A"            # show hidden files
alias lt="ls -ltr"          # sort by date, most recent last
alias lm="ls -Al |more"     # pipe through 'more'
alias lr="ls -lR"           # recursive ls
alias lsr="tree -Csu"       # nice alternative to 'recursive ls'
# Filesystem aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias reload="source ~/.zshrc"

# Arch/pacman
alias install="yay -S"
alias remove="sudo pacman -Rs"
alias update="yay -Syu"
alias lsorphans='pacman -Qdt'
alias rmorphans='sudo pacman -Rs $(pacman -Qtdq)'
alias pcounter='pacman -Q|wc -l'

alias screenshots="sxiv ~/pictures/screenshots/*"
alias bins="cd ~/.local/bin/"

# Applications
alias pdf="zathura"
alias ec="emacsclient"
alias mail="mbsync forgot.bg@gmail.com:INBOX; neomutt"
alias gmail="mbsync bibek.gautam@sxc.edu.np:INBOX; neomutt"
alias vim="nvim"
alias v="nvim"
alias ranger="lf"
alias mutt="neomutt"
alias btcl="bluetoothctl"

#aliases for youtube-dl
# cookies file generated using a firefox addon 'export cookies'
alias youtube-dl="youtube-dl --cookies ~/.youtube-dl/cookies.txt"
alias ytdl="youtube-dl --cookies ~/.youtube-dl/cookies.txt"
alias ytmp3="youtube-dl -f 140 -o '%(title)s.%(ext)s'"
alias tm='tmux attach'
alias play="mpc searchplay"

# specific tasks
alias topdf='soffice --headless --convert-to pdf --outdir ./'
alias weather="curl wttr.in"
alias pw="curl --data-binary @- https://paste.rs"
alias pong="ping -c 3 www.google.com"
alias nocomment='egrep -v "^[ \t]*#|^[ \t]*$"'
# for New file (last modified)
alias -g NF='./*(oc[1])' # this is a global shortcut for last created file or the folder it's in


## Connect ssh
alias blog="cd ~/git/blog"
alias hashbang="mosh bibek@da1.hashbang.sh"

# default viewers just run file name with no command
alias -s {diff,c,txt,dat,csv}=vim
alias -s {md}=typora
alias -s {mid,MID}=playmidi
alias -s {pdf,djvu}=zathura
alias -s {mkv,mp4,avi}=mpv
alias -s {jpg,png,jpeg,PNG,JPEG,JPG,giv}=sxiv
# prefixes git clone to every 'filename' ending in git i.e. URL of git repo
alias -s git="git clone"
alias -s {gz,tgz,tar,TAR}="tar xvf"
alias -g G="| grep"
alias -g L="| less"

# System related
alias suspend="systemctl suspend"
alias dush="du -sm *|sort -n|tail"
alias makeup="updpkgsums && makepkg -ci"

# Battery status
alias bat="acpi -b"
alias su="sudo su"
alias mirror='xrandr --output HDMI-1  --mode 1920x1080 --output LVDS-1  --primary --scale-from 1366x768'
alias bothoff='xrandr --output LVDS-1 --off --output HDMI-1 --off'

# My functions
cf(){
    cd "$(ls -fd ~/.config/*/ | fzf)"
}

# pastebin
function pb() {
    local file=${1:-/dev/stdin}
    URL=$(curl --data-binary @${file} https://paste.rs)
    echo $URL | c
}

function report(){
  notify-send "Done"
}

function swapfiles(){
  cp -r "$1" tmpfileHopeTheNameDoesNotMATCH
  cp -r "$2" "$1"
  cp -r tmpfileHopeTheNameDoesNotMATCH "$2"
  rm tmpfileHopeTheNameDoesNotMATCH
}


function chalyo(){
  acpi -b | grep -Eo Charging
  while [ $? ];
  do
    acpi -b | grep -Eo Charging
  done

  notify-send "chalyo"
}

function playmidi(){
  aplaymidi -p `aplaymidi -l | tail -n 1 | grep -Eo "[0-9]*:."` "$1"
}


mkcd() {
  if [[ -z "$1" ]]
  then
    echo 'mkcd; mkdir and cd into it. Usage: mkcd <dir>'
  else
    { mkdir $1 && cd $1 }
  fi
}

# edit scripts
es() {
  local options choice
  choice=`tree -if /home/bibek/.local/bin/|fzf` && $EDITOR "$choice"
}

# FZF utilities
#fuzzy kill
fk() {
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  [ "x$pid" != "x" ] && kill -${1:-9} $pid
}

fp() {
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
}

#fuzzy read
fr() { fzf -m -x | xargs -d'\n' -r "$@" ; }

# fuzzy open
# - CTRL-O to open with `open` command,
# - CTRL-E or Enter key to open with the $EDITOR
fo() {
  local out file key
  out=$(fzf-tmux --query="$1" --exit-0 --expect=ctrl-o,ctrl-e)
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)
  if [ -n "$file" ]; then
    [ "$key" = ctrl-o ] && open "$file" || ${EDITOR:-vim} "$file"
  fi
}
# fd - cd to selected directory
fd() {
  local dir
  dir=$(find ${1:-*} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}
fmpc() {
  local song_position
  song_position=$(mpc -f "%position%) %artist% - %title%" playlist | \
    fzf-tmux --query="$1" --reverse --select-1 --exit-0 | \
    sed -n 's/^\([0-9]\+\)).*/\1/p') || return 1
  [ -n "$song_position" ] && mpc -q play $song_position
}

# SAS initialization
function sasinit() {
  echo "Initializing HEASOFT"
  . $HEADAS/headas-init.sh && echo "Initialized!"
  if [[ ! $? -eq 0 ]]; then
    echo "Failed. Exiting..."
    exit
  fi
  echo "Initializing SAS"
  source /home/bibek/sas/xmmsas_20190531_1155/setsas.sh && echo "DONE!"
  export SAS_ODF='/home/bibek/research/finalyear/xmm/workDir/obsn/'
  export SAS_CCFPATH='/home/bibek/research/finalyear/xmm/workDir/ccf/'
  echo "SAS_ODF: $SAS_ODF"
  echo "SAS_CCFPATH: $SAS_CCFPATH"
}

# HEASOFT alias
HEADAS="/opt/heasoft/x86_64-pc-linux-gnu-libc2.31"
export HEADAS
alias heainit=". $HEADAS/headas-init.sh"
